--[[
  Script Lua: Menu Acuires sem inscrições/textos
  Recursos:
    - Menu com cores acuires
    - Abre/fecha com animação
    - Opções separadas: TP Base, JM Speed, Pulo 230, Pulo Infinito
    - GUI arrastável (mobile)
    - Botões sem textos, apenas cor e função
    - TP Base: cordenadas -471 -7 220
    - JM Speed: 67
    - Pulo: 230
    - Pulo infinito: toggle
]]

local acuiresColors = {
    Color3.fromRGB(0, 255, 255),
    Color3.fromRGB(0, 200, 255),
    Color3.fromRGB(0, 120, 255),
    Color3.fromRGB(0, 255, 200)
}

local menuOpen = false
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local hum = char:FindFirstChildWhichIsA("Humanoid")
local gui = Instance.new("ScreenGui")
gui.Name = "AcuiresMenu"
gui.Parent = game.CoreGui

local function makeDraggable(frame)
    local dragging, dragInput, dragStart, startPos
    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    frame.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement) then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 250, 0, 330)
mainFrame.Position = UDim2.new(0.5, -125, 0.5, -165)
mainFrame.BackgroundColor3 = acuiresColors[1]
mainFrame.BorderSizePixel = 0
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.Visible = false
mainFrame.Parent = gui
makeDraggable(mainFrame)

local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0, 60, 0, 60)
toggleBtn.Position = UDim2.new(0, 10, 0, 10)
toggleBtn.BackgroundColor3 = acuiresColors[2]
toggleBtn.Text = ""
toggleBtn.Parent = gui

local function animateMenu(open)
    mainFrame.Visible = true
    if open then
        mainFrame:TweenSize(UDim2.new(0, 250, 0, 330), Enum.EasingDirection.Out, Enum.EasingStyle.Back, 0.3, true)
    else
        mainFrame:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.In, Enum.EasingStyle.Back, 0.3, true, function()
            mainFrame.Visible = false
        end)
    end
end

toggleBtn.MouseButton1Click:Connect(function()
    menuOpen = not menuOpen
    animateMenu(menuOpen)
end)

local tpBase = Instance.new("Frame")
tpBase.Size = UDim2.new(1, -20, 0, 60)
tpBase.Position = UDim2.new(0, 10, 0, 10)
tpBase.BackgroundColor3 = acuiresColors[3]
tpBase.Parent = mainFrame

local tpBtn = Instance.new("TextButton")
tpBtn.Size = UDim2.new(0, 45, 0, 40)
tpBtn.Position = UDim2.new(0.5, -22, 0.5, -20)
tpBtn.BackgroundColor3 = acuiresColors[1]
tpBtn.Text = ""
tpBtn.Parent = tpBase

tpBtn.MouseButton1Click:Connect(function()
    local root = char:FindFirstChild("HumanoidRootPart")
    if root then
        root.CFrame = CFrame.new(-471, -7, 220)
    end
end)

local speedFrame = Instance.new("Frame")
speedFrame.Size = UDim2.new(1, -20, 0, 60)
speedFrame.Position = UDim2.new(0, 10, 0, 80)
speedFrame.BackgroundColor3 = acuiresColors[4]
speedFrame.Parent = mainFrame

local speedBtn = Instance.new("TextButton")
speedBtn.Size = UDim2.new(0, 45, 0, 40)
speedBtn.Position = UDim2.new(0.5, -22, 0.5, -20)
speedBtn.BackgroundColor3 = acuiresColors[2]
speedBtn.Text = ""
speedBtn.Parent = speedFrame

speedBtn.MouseButton1Click:Connect(function()
    hum.WalkSpeed = 67
end)

local jumpFrame = Instance.new("Frame")
jumpFrame.Size = UDim2.new(1, -20, 0, 60)
jumpFrame.Position = UDim2.new(0, 10, 0, 150)
jumpFrame.BackgroundColor3 = acuiresColors[1]
jumpFrame.Parent = mainFrame

local jumpBtn = Instance.new("TextButton")
jumpBtn.Size = UDim2.new(0, 45, 0, 40)
jumpBtn.Position = UDim2.new(0.5, -22, 0.5, -20)
jumpBtn.BackgroundColor3 = acuiresColors[3]
jumpBtn.Text = ""
jumpBtn.Parent = jumpFrame

jumpBtn.MouseButton1Click:Connect(function()
    hum.JumpPower = 230
end)

local infJumpFrame = Instance.new("Frame")
infJumpFrame.Size = UDim2.new(1, -20, 0, 60)
infJumpFrame.Position = UDim2.new(0, 10, 0, 220)
infJumpFrame.BackgroundColor3 = acuiresColors[2]
infJumpFrame.Parent = mainFrame

local infJumpBtn = Instance.new("TextButton")
infJumpBtn.Size = UDim2.new(0, 45, 0, 40)
infJumpBtn.Position = UDim2.new(0.5, -22, 0.5, -20)
infJumpBtn.BackgroundColor3 = acuiresColors[4]
infJumpBtn.Text = ""
infJumpBtn.Parent = infJumpFrame

local infJump = false
local infJumpConn

infJumpBtn.MouseButton1Click:Connect(function()
    infJump = not infJump
    if infJump then
        infJumpBtn.BackgroundColor3 = acuiresColors[1]
        infJumpConn = UserInputService.JumpRequest:Connect(function()
            hum:ChangeState(Enum.HumanoidStateType.Jumping)
        end)
    else
        infJumpBtn.BackgroundColor3 = acuiresColors[4]
        if infJumpConn then
            infJumpConn:Disconnect()
        end
    end
end)

if UserInputService.TouchEnabled then
    toggleBtn.Size = UDim2.new(0, 80, 0, 80)
end

mainFrame.Size = UDim2.new(0, 0, 0, 0)
mainFrame.Visible = false
